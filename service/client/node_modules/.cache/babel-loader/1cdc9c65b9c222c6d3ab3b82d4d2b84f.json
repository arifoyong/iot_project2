{"ast":null,"code":"import _classCallCheck from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\MyLab\\\\iot_project\\\\service\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import Chart from\"chart.js\";var Line=/*#__PURE__*/function(_React$Component){_inherits(Line,_React$Component);function Line(props){var _this;_classCallCheck(this,Line);_this=_possibleConstructorReturn(this,_getPrototypeOf(Line).call(this,props));_this.drawLineChart=function(){var wh=_this.state.width;var breakPoint=480;var fs=wh>breakPoint?12:8;_this.lineChart=new Chart(_this.chartRef.current.getContext(\"2d\"),{type:\"line\",data:{datasets:_this.props.tempData},options:{responsive:true,maintainAspectRatio:true,legend:{display:wh>breakPoint?true:false,position:\"bottom\",fontSize:fs},title:{display:true,text:_this.props.title,fontSize:fs*1.2},scales:{xAxes:[{type:\"time\",time:{unit:'hour',unitStepSize:0.5,round:'hour',tooltipFormat:\"h:mm:ss a\",displayFormats:{hour:'MMM D, h:mm a'}},ticks:{fontSize:fs,minRotation:0,maxRotation:12}}],yAxes:[{type:'linear',ticks:{min:_this.props.yMin,max:_this.props.yMax,fontSize:fs},scaleLabel:{display:true,labelString:_this.props.yLabel,fontSize:fs}}]}}});};_this.state={width:0,height:0};_this.chartRef=React.createRef();_this.updateWindowDimensions=_this.updateWindowDimensions.bind(_assertThisInitialized(_this));return _this;}_createClass(Line,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.drawLineChart();}},{key:\"componentDidMount\",value:function componentDidMount(){this.updateWindowDimensions();window.addEventListener('resize',this.updateWindowDimensions);}},{key:\"updateWindowDimensions\",value:function updateWindowDimensions(){this.setState({width:window.innerWidth,height:window.innerHeight});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateWindowDimensions);}},{key:\"render\",value:function render(){return React.createElement(\"div\",{id:\"canvas-holder\"},React.createElement(\"canvas\",{id:\"myChart\",style:{// \"minHeight\": \"100%\",\n// \"minWidth\": \"70%\"\n},ref:this.chartRef}));}}]);return Line;}(React.Component);export default Line;","map":{"version":3,"sources":["D:/MyLab/iot_project/service/client/src/components/Line.js"],"names":["React","Chart","Line","props","drawLineChart","wh","state","width","breakPoint","fs","lineChart","chartRef","current","getContext","type","data","datasets","tempData","options","responsive","maintainAspectRatio","legend","display","position","fontSize","title","text","scales","xAxes","time","unit","unitStepSize","round","tooltipFormat","displayFormats","hour","ticks","minRotation","maxRotation","yAxes","min","yMin","max","yMax","scaleLabel","labelString","yLabel","height","createRef","updateWindowDimensions","bind","window","addEventListener","setState","innerWidth","innerHeight","removeEventListener","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass Line extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0 };\r\n\r\n    this.chartRef = React.createRef();\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawLineChart();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  drawLineChart = () => {\r\n    const wh = this.state.width\r\n    const breakPoint = 480\r\n    const fs = wh > breakPoint ? 12 : 8\r\n\r\n    this.lineChart = new Chart(this.chartRef.current.getContext(\"2d\"), {\r\n      type: \"line\",\r\n      data: { datasets: this.props.tempData },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        legend: {\r\n          display: wh > breakPoint ? true : false,\r\n          position: \"bottom\",\r\n          fontSize: fs,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: this.props.title,\r\n          fontSize: fs * 1.2\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            type: \"time\",\r\n            time: {\r\n              unit: 'hour',\r\n              unitStepSize: 0.5,\r\n              round: 'hour',\r\n              tooltipFormat: \"h:mm:ss a\",\r\n              displayFormats: {\r\n                hour: 'MMM D, h:mm a'\r\n              }\r\n            },\r\n            ticks: {\r\n              fontSize: fs,\r\n              minRotation: 0,\r\n              maxRotation: 12\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            type: 'linear',\r\n            ticks: {\r\n              min: this.props.yMin,\r\n              max: this.props.yMax,\r\n              fontSize: fs\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: this.props.yLabel,\r\n              fontSize: fs\r\n            }\r\n          }]\r\n        }\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"canvas-holder\">\r\n        <canvas id=\"myChart\" style={{\r\n          // \"minHeight\": \"100%\",\r\n          // \"minWidth\": \"70%\"\r\n        }\r\n        } ref={this.chartRef} />\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Line;\r\n"]},"metadata":{},"sourceType":"module"}