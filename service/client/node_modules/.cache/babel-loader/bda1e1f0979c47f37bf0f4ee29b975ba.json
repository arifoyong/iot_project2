{"ast":null,"code":"import _defineProperty from \"/usr/src/app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/usr/src/app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/app/client/src/components/MyModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction MyModal(props) {\n  const show = props.show,\n        handleClose = props.handleClose,\n        updateData = props.updateData;\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        dt = _useState2[0],\n        setForm = _useState2[1];\n\n  useEffect(() => {\n    let URI = \"/api/device/\".concat(props.idNo);\n    fetch(URI).then(res => res.json()).then(json => {\n      setForm(json);\n    });\n  }, [props.idNo]);\n\n  const handleFormChange = e => {\n    e.persist();\n\n    if (e.target.name === 'alertActive') {\n      setForm(dt => _objectSpread({}, dt, {\n        [e.target.name]: e.target.checked\n      }));\n    } else {\n      setForm(dt => _objectSpread({}, dt, {\n        [e.target.name]: e.target.value\n      }));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/device', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dt)\n    }).then(response => {\n      if (response.ok) {\n        updateData();\n      } else {\n        console.log(\"Failed to update data\");\n      }\n    });\n    handleClose();\n  };\n\n  return React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Edit Device Settings\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"deviceId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Device ID\"), React.createElement(Form.Control, {\n    disabled: true,\n    type: \"number\",\n    name: \"id\",\n    value: dt.id,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Location\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"location\",\n    value: dt.location,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"alertactive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Activate alert\",\n    name: \"alertActive\",\n    checked: dt.alertActive,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"temp_lcl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Temperature LCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"temp_lcl\",\n    value: dt.temp_lcl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"temp_ucl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Temperature UCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"temp_ucl\",\n    value: dt.temp_ucl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"humi_lcl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Humidity LCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"humi_lcl\",\n    value: dt.humi_lcl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"humi_ucl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Humidity UCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"humi_ucl\",\n    value: dt.humi_ucl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"batt_lcl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Battery LCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"batt_lcl\",\n    value: dt.batt_lcl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"batt_ucl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Battery UCL\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"batt_ucl\",\n    value: dt.batt_ucl,\n    onChange: handleFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))), React.createElement(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"mybtn\",\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    className: \"mybtn\",\n    variant: \"danger\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Cancel\")))));\n}\n\nexport default MyModal;","map":{"version":3,"sources":["/usr/src/app/client/src/components/MyModal.js"],"names":["React","useState","useEffect","Modal","Button","ButtonToolbar","Form","Row","Col","MyModal","props","show","handleClose","updateData","dt","setForm","URI","idNo","fetch","then","res","json","handleFormChange","e","persist","target","name","checked","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","response","ok","console","log","id","location","alertActive","temp_lcl","temp_ucl","humi_lcl","humi_ucl","batt_lcl","batt_ucl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction MyModal(props) {\r\n  const { show, handleClose, updateData } = props;\r\n  const [dt, setForm] = useState({})\r\n\r\n  useEffect(() => {\r\n    let URI = `/api/device/${props.idNo}`\r\n    fetch(URI).then(res => res.json())\r\n      .then(json => {\r\n        setForm(json)\r\n      })\r\n  }, [props.idNo])\r\n\r\n  const handleFormChange = e => {\r\n    e.persist()\r\n    if (e.target.name === 'alertActive') {\r\n      setForm(dt => ({ ...dt, [e.target.name]: e.target.checked }))\r\n    } else {\r\n      setForm(dt => ({ ...dt, [e.target.name]: e.target.value }))\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch('/api/device', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(dt)\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        updateData()\r\n      } else {\r\n        console.log(\"Failed to update data\")\r\n      }\r\n    })\r\n\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Device Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"deviceId\">\r\n                <Form.Label>Device ID</Form.Label>\r\n                <Form.Control disabled type=\"number\" name=\"id\" value={dt.id} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"location\">\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control type=\"text\" name=\"location\" value={dt.location} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"alertactive\">\r\n                <Form.Check type=\"checkbox\" label=\"Activate alert\" name=\"alertActive\" checked={dt.alertActive} onChange={handleFormChange} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"temp_lcl\">\r\n                <Form.Label>Temperature LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"temp_lcl\" value={dt.temp_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"temp_ucl\">\r\n                <Form.Label>Temperature UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"temp_ucl\" value={dt.temp_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"humi_lcl\">\r\n                <Form.Label>Humidity LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"humi_lcl\" value={dt.humi_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"humi_ucl\">\r\n                <Form.Label>Humidity UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"humi_ucl\" value={dt.humi_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"batt_lcl\">\r\n                <Form.Label>Battery LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"batt_lcl\" value={dt.batt_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"batt_ucl\">\r\n                <Form.Label>Battery UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"batt_ucl\" value={dt.batt_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <ButtonToolbar>\r\n            <Button className=\"mybtn\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n          </Button>\r\n            <Button className=\"mybtn\" variant=\"danger\" onClick={handleClose}>\r\n              Cancel\r\n          </Button>\r\n          </ButtonToolbar>\r\n        </Form>\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MyModal;"]},"metadata":{},"sourceType":"module"}